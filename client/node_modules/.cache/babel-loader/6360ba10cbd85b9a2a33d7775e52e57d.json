{"ast":null,"code":"import _regeneratorRuntime from\"D:/Web Development/crwn-clothing/client/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from\"redux-saga/effects\";import ShopActionTypes from\"./shop.types\";import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import{fetchCollectionsSuccess,fetchCollectionsFailure}from\"./shop.actions\";export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return console.log(\"i am fired\");case 2:_context.prev=2;collectionRef=firestore.collection(\"collections\");_context.next=6;return collectionRef.get();case 6:snapshot=_context.sent;_context.next=9;return call(convertCollectionsSnapshotToMap,snapshot);case 9:collectionsMap=_context.sent;_context.next=12;return put(fetchCollectionsSuccess(collectionsMap));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);_context.next=18;return put(fetchCollectionsFailure(_context.t0.message));case 18:case\"end\":return _context.stop();}}},_marked,null,[[2,14]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["D:/Web Development/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","console","log","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"mKAWiBA,qB,iDAiBAC,qB,iDAMAC,S,EAlCjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAIA,OACEC,uBADF,CAEEC,uBAFF,KAGO,gBAHP,CAKA,MAAO,SAAUX,CAAAA,qBAAV,2LACL,MAAMY,CAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN,CADK,uBAIGC,aAJH,CAImBN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAJnB,iBAKc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CALd,OAKGC,QALH,+BAOoB,MAAMb,CAAAA,IAAI,CAC/BK,+BAD+B,CAE/BQ,QAF+B,CAAV,CAPpB,OAOGC,cAPH,gCAWH,MAAMb,CAAAA,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT,CAXG,0GAcH,MAAMb,CAAAA,GAAG,CAACM,uBAAuB,CAAC,YAAMQ,OAAP,CAAxB,CAAT,CAdG,qEAiBP,MAAO,SAAUlB,CAAAA,qBAAV,qJACL,MAAME,CAAAA,UAAU,CACdI,eAAe,CAACa,uBADF,CAEdpB,qBAFc,CAAhB,CADK,wDAMP,MAAO,SAAUE,CAAAA,SAAV,yIACL,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADK","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\r\nimport ShopActionTypes from \"./shop.types\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from \"./shop.actions\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"i am fired\");\r\n\r\n  try {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot = yield collectionRef.get();\r\n    ///call-> (function,parameter) function invoker\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n    //put -> dispatcher\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\nexport function* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}