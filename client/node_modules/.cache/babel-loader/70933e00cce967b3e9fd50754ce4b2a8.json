{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport collectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\"; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  //direct state initialize no need of const super\n  // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // //doing it by promises\n    // // fetch(\n    // //   \"https://firestore.googleapis.com/v1/projects/crwn-db-7e3fa/databases/(default)/documents/collections\"\n    // // )\n    // //   .then((response) => response.json())\n    // //   .then((collections) => console.log(collections));\n    // collectionRef.get().then((snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    //   // console.log({ collectionsMap }); ///got all the doc in that collection \"collection\"\n    //   // console.log(123123123);\n    // });\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; // const { loading } = this.state;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: collectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Web Development/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","connect","fetchCollectionsStart","collectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch","fetchCollectionsStartAsync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrC;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAM;AAAEL,MAAAA;AAAF,QAA4B,KAAKM,KAAvC;AACAN,IAAAA,qBAAqB;AACtB;;AACDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB,CADO,CAEP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAER;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEP;AAFb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1CoC;;AA6CvC,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACC,0BAA0B,EAA3B;AADG,CAAf,CAA3B;;AAGA,eAAeb,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\r\n\r\nimport collectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\nimport CollectionPageContainer from \"../collection/collection.container\";\r\n\r\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  //direct state initialize no need of const super\r\n  // state = {\r\n  //   loading: true,\r\n  // };\r\n  // unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection(\"collections\");\r\n    // //doing it by promises\r\n    // // fetch(\r\n    // //   \"https://firestore.googleapis.com/v1/projects/crwn-db-7e3fa/databases/(default)/documents/collections\"\r\n    // // )\r\n    // //   .then((response) => response.json())\r\n    // //   .then((collections) => console.log(collections));\r\n    // collectionRef.get().then((snapshot) => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    //   // console.log({ collectionsMap }); ///got all the doc in that collection \"collection\"\r\n    //   // console.log(123123123);\r\n    // });\r\n    const { fetchCollectionsStart } = this.props;\r\n    fetchCollectionsStart();\r\n  }\r\n  render() {\r\n    const { match } = this.props;\r\n    // const { loading } = this.state;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={collectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPageContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}