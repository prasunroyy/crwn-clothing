{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\crwn-clothing\\\\src\\\\pages\\\\collection\\\\collection.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport \"./collection.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  _s();\n\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection(\"collections\").onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const {\n    title,\n    items\n  } = collection;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(CollectionItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; ////2nd param gives us all the props that we getting in the collection component\n//including the matched component selector had find() thats why\n///ownProps.match.params.collectionId is wired into the state\n\n\n_s(CollectionPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CollectionPage;\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"sources":["D:/Web Development/crwn-clothing/src/pages/collection/collection.component.js"],"names":["React","useEffect","connect","selectCollection","firestore","CollectionItem","CollectionPage","collection","unsubscribeFromCollections","onSnapshot","snapshot","console","log","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,OAAO,0BAAP;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACzCN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,0BAA0B,GAAGJ,SAAS,CACzCG,UADgC,CACrB,aADqB,EAEhCE,UAFgC,CAEpBC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFO,CAAnC;AAIA,WAAO,MAAM;AACXF,MAAAA,0BAA0B;AAC3B,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,UAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBM;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,cAAD;AAA8B,QAAA,IAAI,EAAEA;AAApC,SAAqBA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArBD,C,CAsBA;AACA;AACA;;;GAxBMX,c;;KAAAA,c;;AAyBN,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEJ,gBAAgB,CAACiB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\n\r\nimport \"./collection.styles.scss\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  useEffect(() => {\r\n    const unsubscribeFromCollections = firestore\r\n      .collection(\"collections\")\r\n      .onSnapshot((snapshot) => console.log(snapshot));\r\n\r\n    return () => {\r\n      unsubscribeFromCollections();\r\n    };\r\n  }, []);\r\n  const { title, items } = collection;\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <div className=\"items\">\r\n        {items.map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n////2nd param gives us all the props that we getting in the collection component\r\n//including the matched component selector had find() thats why\r\n///ownProps.match.params.collectionId is wired into the state\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}