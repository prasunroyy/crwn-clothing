{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDa1J6wWKUHUuZMC_nx5FZRRpHp94NsHiU\",\n  authDomain: \"crwn-db-7e3fa.firebaseapp.com\",\n  projectId: \"crwn-db-7e3fa\",\n  storageBucket: \"crwn-db-7e3fa.appspot.com\",\n  messagingSenderId: \"371567924211\",\n  appId: \"1:371567924211:web:658c16da420a64732e7886\",\n  measurementId: \"G-VSDTR4FGPG\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //query to firebase for data from the object\n\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  console.log(snapShot);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/Web Development/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,SAAS,EAAE,eAHF;AAITC,EAAAA,aAAa,EAAE,2BAJN;AAKTC,EAAAA,iBAAiB,EAAE,cALV;AAMTC,EAAAA,KAAK,EAAE,2CANE;AAOTC,EAAAA,aAAa,EAAE;AAPN,CAAb;AASE,OAAO,MAAMC,yBAAyB,GAAE,OAAMC,QAAN,EAAgBC,cAAhB,KAAiC;AACvE,MAAG,CAACD,QAAJ,EAAc,OADyD,CAEvE;;AACA,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAd;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAqBV,QAA3B;AACA,UAAMW,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAMa,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACH;AACJ;;AAGDF,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,CAxBM;AA2BPhB,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAE,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyDa1J6wWKUHUuZMC_nx5FZRRpHp94NsHiU\",\r\n    authDomain: \"crwn-db-7e3fa.firebaseapp.com\",\r\n    projectId: \"crwn-db-7e3fa\",\r\n    storageBucket: \"crwn-db-7e3fa.appspot.com\",\r\n    messagingSenderId: \"371567924211\",\r\n    appId: \"1:371567924211:web:658c16da420a64732e7886\",\r\n    measurementId: \"G-VSDTR4FGPG\"\r\n  };\r\n  export const createUserProfileDocument= async(userAuth, additionalData)=>{\r\n    if(!userAuth) return;\r\n    //query to firebase for data from the object\r\n    const userRef=firestore.doc(`user/${userAuth.uid}`)\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n        const {displayName, email}=userAuth;\r\n        const createdAt= new Date();\r\n\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        }catch(error){\r\n            console.log('error creating user',error.message)\r\n        }\r\n    }\r\n\r\n\r\n    console.log(snapShot)\r\n  }\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle =() => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}